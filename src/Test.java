public class Test {
    public static void main(String[] args) {
        NeuralNetwork nn = new NeuralNetwork(7, 5, 4);
        Double[][] input = ReadFile.readInput("X_In.csv");
        Integer[][] output = ReadFile.readOutput("Y_Out.csv");
        Double[][] predict = new Double[3000][];

        Double[][] ih_bias = new Double[][] {{0.45644277088846025}, {-9.336955628518517}, {6.935067478014529}, {3.9829760359077087}, {-4.207927945835548}, {0.4240697305832159}, {-0.3697493736865792}, {0.6947577852188417}, {-0.08055462655913267}, {-21.414279951716694}, {0.1532738486088907}, {-6.352580991817988}, {-0.9560224052900205}, {0.8023502369567732}, {0.7320164120689454}, {-10.926760779372481}, {0.8047554581436794}, {10.370974887649895}, {0.8974139781646528}, {-0.29979241570700016}};
        Double[][] ho_bias = new Double[][] {{-1.8780849339335972}, {0.06259811995942027}, {0.899738491588586}, {0.3240172459981514}};
        Double[][] ih_weights = new Double[][]
                {{0.9096104941869498, 0.3576106045104187, 0.7797028857442276, 0.26731355558337894, 1.0880427377624866, 1.1711456531249733, 0.6236356571669982},
                {-0.05642309616070654, 20.758745942976073, 1.445284652232894, -2.229631149222094, 0.753768289753432, -4.783860312971389, -0.5553366875269272},
                {3.935964352720017, -7.879309226620651, 9.521937264292077, 4.091797236535248, -14.823817785245312, -18.08296300535539, 10.098445845079793},
                {12.799604735635091, 6.2181615414267135, 0.2001443145033921, 22.990606664507574, -0.8096004569779605, 1.7368143903591655, -16.552634855237223},
                {0.02602301977559251, -0.20942452930707867, 7.0542622918094855, 0.5325334010660233, -0.26178712646788405, -13.929579843949004, -0.35321722905665737},
                {-0.4526387073839724, -0.46966470358205364, -0.16283548042250426, -1.0522663829365622, -1.367193080803861, -1.3819787509124823, -0.0474812586377714},
                {-0.39549641020878623, 0.09528115560934085, -0.27390424451174583, -0.6418867452790079, -1.14243878272014, -1.1810636773998233, -0.5959486216124936},
                {0.8110688714605059, 0.6589815344523134, 0.8039349176278981, 0.11155004557627737, 1.3633158752181316, 0.9291157613303929, 0.5000724797758674},
                {-0.20187315272818665, -0.41591863974842597, -0.2869999874325444, -0.4131466630963038, -1.1049830788726238, -1.3298833844850109, -0.7542149331474265},
                {4.286228775723386, 4.376890623477857, 19.987189273884443, -3.9118724111473346, -1.4079139472886038, 3.0873774192458145, -5.811488447059627},
                {0.5915741632390467, 0.51592765243465, 0.5092056561278624, 0.9632755106446386, 0.8897064555432994, 1.1948273249928478, 0.930363120561642},
                {9.947112253190108, -1.4749667688622246, -1.3196722750374648, -0.6403593509372448, -0.4296105326538663, -0.4027457223765784, 2.1096795954719325},
                {0.8913273102684325, 13.918439751210327, -24.937061400122136, -3.0525656424883434, -0.5619123505597551, -1.7883927627423353, -0.15025659066789274},
                {0.7822827267868735, 0.43315516338266896, 0.26241405330822876, 0.3552647144839883, 0.9304318395366502, 1.2138732732526984, 0.5549835689909083},
                {0.8174179831017427, 0.7821097581458457, 0.3233319239262119, 0.4653974298760826, 0.7657641873532683, 1.15381147208277, 0.6237640024467904},
                {-11.536691472251926, -6.182206042197646, -23.554365001057818, -21.368871343970984, -8.594271958070365, 3.529736555319757, 30.232769705288685},
                {0.32949511023590233, 0.7597424060086064, 0.3829708801416317, 0.2504295855036024, 0.9188197048918714, 1.0909880770076932, 1.0957587473093688},
                {0.3187023770156667, -0.7872710388375426, -16.281183797915595, -0.5271783417897546, 5.545646501572772, -1.820025563654675, 0.3156607638747846},
                {0.6380564989099652, 1.2600333972318631, 0.2776409378703274, 0.897407271147235, 0.6183153892957095, -11.263870900951893, 0.42226046729585737},
                {-0.46456650061834504, -0.2256034445412672, -0.5822678662129493, -0.43342676624562176, -1.5600707734419492, -1.0180216882054882, -0.5276799043519451}};
        Double[][] ho_weights = new Double[][]
                {{-2.479487825644708, 9.092756403796388, -1.0913942700318076, 3.518811103267428, -0.9024476439757616, 0.4687014017367387, 0.5567611593135672, -2.411766120178707, 0.29698999483196536, -3.224257857421614, -2.3040056071386443, 10.538145045649895, -11.380672774992064, -1.699939497881349, -2.336399642840536, -1.5278259118688762, -2.02838411592633, 1.391150989300717, -10.483659149718967, 0.9265535516849006},
                {0.11260825068499733, 2.5823765800942975, 0.7932955940229479, -12.051957098993507, 2.67526661324605, 0.057551067030181174, 0.4023891737944118, 0.5150014370912457, 0.10065819823030653, 1.158894770541596, -0.38989041723241924, 2.2636833760499786, 8.265892816649554, -0.3861098442184122, 0.31268888303213976, 1.7574818896074953, 0.38197909743829017, 2.782048536311224, 8.045708058743429, 0.0695872755983274},
                {0.8638577210420041, -10.372125013739934, 1.08330808492185, -9.459075090656375, 5.1769896524629955, 0.6738293182101062, 0.07784890321631324, 0.4320551120336754, 0.5609301933754285, 2.8734755917841976, 0.6355407959791135, 6.454975145086736, -2.945040230391787, 0.23554455683189357, 1.0497987822873114, 1.5488562801139745, 0.7533042719633605, -2.1791685328203068, 6.624076355094768, 0.692413854188424},
                {1.2063248541684015, -7.710695021650302, -1.740012867799011, -0.19168963794625352, -0.7384087251205137, 0.5035774416461004, 0.11340275849513272, 0.9420925497146199, 0.07906513290587253, -6.139669295303967, 0.6309911705021392, -2.699370231349254, -0.9797296637324479, 0.32014771264122704, 0.6832713456827506, 0.9674046801910311, 0.9894006442626244, 6.550798693646221, 7.654523516873176, 0.47756008513323384}};

        nn.setIh_bias(ih_bias);
        nn.setHo_bias(ho_bias);
        nn.setIh_weights(ih_weights);
        nn.setHo_weights(ho_weights);

        for (int i = 0; i < output.length; i++) {
            predict[i] = nn.predict(input[i]);
        }

        for (int i = 0; i < output.length; i++) {
            System.out.println("Linha " + i);
            System.out.print("Predict: ");
            for (int j = 0; j < predict[0].length; j++) {
                System.out.print(predict[i][j] + ", ");
            }
            System.out.println();
            System.out.print("Target: ");
            for (int j = 0; j < output[0].length; j++) {
                System.out.print(output[i][j] + ", ");
            }
            System.out.println();
        }

    }
}
